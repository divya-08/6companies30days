class Solution {
public:
    int maxDistance(vector<vector<int>>& arr) {
        int n=arr.size();
        vector<vector<int>> dp(n, vector<int>(n,-1));
        queue<pair<int,int>> q;
        for(int i=0;i<n;i++) {
            for(int j=0;j<n;j++) {
                if(arr[i][j]==1) {
                    dp[i][j]=0;
                    q.push({i,j});
                }
            }
        }
        int i, j, x, y;
        int x_dir[4]={0,1,0,-1};
        int y_dir[4]={1,0,-1,0};
        if(q.size()==0 || q.size()==n*n) {return -1;}
        int res=0;
        while(!q.empty()) {
            pair<int,int> curr=q.front();
            q.pop();
            i=curr.first;
            j=curr.second;
            for(int p=0;p<4;p++) {
                x=i+x_dir[p];
                y=j+y_dir[p];
                if(x>=0 && y>=0 && x<n && y<n) {
                    if(dp[x][y]==-1) {
                        q.push({x,y});
                        dp[x][y]=1+dp[i][j];
                        res=max(res, dp[x][y]);
                    }
                }
            }
        }
        return res;
    }
};
