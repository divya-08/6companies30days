// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int isValid(vector<vector<int>> mat){
        set<string>s;
        set<string>::iterator itr;
        for(int i=0;i<9;i++) {
            for(int j=0;j<9;j++) {
                if(mat[i][j] != 0) {
                    if(s.find("row"+to_string(i)+to_string(mat[i][j]))!=s.end()) {return false;}
                    else {s.insert("row"+to_string(i)+to_string(mat[i][j]));}
                    if(s.find("column"+to_string(j)+to_string(mat[i][j]))!=s.end()) {return false;}
                    else {s.insert("column"+to_string(j)+to_string(mat[i][j]));}
                    if(s.find("box"+to_string((i/3)*3+j/3)+to_string(mat[i][j]))!=s.end()) {return false;}
                    else {s.insert("box"+to_string((i/3)*3+j/3)+to_string(mat[i][j]));}
                }
            }
        }
        return true;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        vector<vector<int>> mat(9, vector<int>(9, 0));
        for(int i = 0;i < 81;i++)
            cin>>mat[i/9][i%9];
        
        Solution ob;
        cout<<ob.isValid(mat)<<"\n";
    }
    return 0;
}  // } Driver Code Ends
