// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
	public:
		string FirstNonRepeating(string A){
		    unordered_map<char, int> m;
		    deque<char> q;
		    deque<char>::iterator itr;
		    string ans;
		    for(int i=0;i<A.size();i++) {
		        //if not found
		        if(m.find(A[i])==m.end()) {
		            m[A[i]]++;
		            q.push_back(A[i]);
		            if(!q.empty()) {ans+=q.front();}
		            else {ans+=A[i];}
		        }
		        //found
		        else {
		            m[A[i]]++;
		            if(!q.empty()) {
    		            itr=find(q.begin(),q.end(),A[i]);
    		            if(itr!=q.end()) {q.erase(itr);}
		            }
		            if(!q.empty()) {ans+=q.front();}
		            else {ans.push_back('#');}
		        }
		    }
		    return ans;
		}

};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string A;
		cin >> A;
		Solution obj;
		string ans = obj.FirstNonRepeating(A);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
