class Solution {
public:
    static bool cmp(pair<int,int> p1, pair<int,int> p2) {
        if(p1.second==p2.second) {return p1.first>p2.first;}
        return p1.second>p2.second;
    }
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        vector<pair<int,int>> v;
        for(int i=0;i<n;i++){v.push_back({speed[i],efficiency[i]});}
        sort(v.begin(),v.end(),cmp);
        priority_queue <int, vector<int>, greater<int>> p; //min heap
        long long int ans=0, res=0;
        for(auto i:v) {
            if(p.size()>=k) {
                ans-=p.top();
                p.pop();
            }
            ans+=i.first;
            p.push(i.first);
            res=max(res, (i.second)*ans);
        }
        return res%1000000007;
    }
};
